# -*- coding: utf-8 -*-
"""wineQuality.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BF6BFQYIUXfOPv4ENDiL-5tk0SziNiJu
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""# Mục mới"""

data = pd.read_csv("winequality-red.csv",";")
df = pd.DataFrame(data)
df

plt.figure(figsize=(10, 6))
sns.countplot(data["quality"], palette="muted")

fig, ax =plt.subplots(figsize=(10,10))
dataplot = sns.heatmap (data.corr(), annot = True, ax=ax)

"""# Mục mới"""

for i in range(len(df)):
  if(df['quality'][i] == 3):
    df['quality'][i] = 0
  elif(df['quality'][i] == 4):
    df['quality'][i] = 0
  elif(df['quality'][i] == 5):
    df['quality'][i] = 0
  elif(df['quality'][i] == 6):
    df['quality'][i] = 1
  elif(df['quality'][i] == 7):
    df['quality'][i] = 1
  elif(df['quality'][i] == 8):
    df['quality'][i] = 1

df

plt.figure(figsize=(10, 6))
sns.countplot(df["quality"], palette="muted")

import sklearn
from sklearn import tree
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.model_selection import KFold
kf = KFold(n_splits=10,shuffle=True)
result = 0
for i, (train, test) in enumerate(kf.split(df)):
  
  x_train = df.iloc[train]
  y_train = df.iloc[train]['quality']
  x_train = x_train.drop(columns=['quality'])
  x_test = df.iloc[test]
  y_test = df.iloc[test]['quality']
  x_test = x_test.drop(columns=['quality'])
  
  clf = tree.DecisionTreeClassifier(random_state=0, max_depth=5)
  clf = clf.fit(x_train, y_train)
  predict = clf.predict(x_test)
  y_test = y_test.tolist()
  re = 0
  for e in range(len(predict)):
    if predict[e] == y_test[e]:
      re +=1
  result +=re/len(predict)

result/=10
result

"""# Mục mới"""